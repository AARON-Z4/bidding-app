version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nextgen_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: nextgen_marketplace
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nextgen_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nextgen_backend
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/nextgen_marketplace
      SECRET_KEY: 09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID}
      RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET}
      ALLOWED_ORIGINS: http://localhost:5173,http://localhost:3000
      HOST: 0.0.0.0
      PORT: 8000
      DEBUG: "True"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nextgen_network
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads

  # Frontend (Optional - for production)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: nextgen_frontend
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - backend
  #   networks:
  #     - nextgen_network

volumes:
  postgres_data:
  backend_uploads:

networks:
  nextgen_network:
    driver: bridge